# Chemical Compound Manager - Docker Environment Template
# Copy this file to chemical-compound-backend/.env and customize as needed

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# SQLite Configuration (Recommended for Docker)
USE_SQLITE=true

# MySQL Configuration (Alternative)
# USE_SQLITE=false
# DB_HOST=mysql
# DB_PORT=3306
# DB_NAME=chemical_compounds
# DB_USER=root
# DB_PASSWORD=your_secure_password

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Application Port
PORT=3000

# Environment (development, production, test)
NODE_ENV=production

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret (CHANGE THIS IN PRODUCTION!)
JWT_SECRET=your_super_secure_jwt_secret_key_here

# JWT Token Expiration
JWT_EXPIRES_IN=7d

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Frontend URL (adjust for your domain in production)
FRONTEND_URL=http://localhost

# =============================================================================
# MONGODB CONFIGURATION (Optional)
# =============================================================================

# MongoDB URI (if using MongoDB features)
# MONGODB_URI=mongodb://mongo:27017/chemical_compounds

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Level (error, warn, info, debug)
LOG_LEVEL=info

# =============================================================================
# PRODUCTION NOTES
# =============================================================================

# For production deployment:
# 1. Change JWT_SECRET to a secure random string
# 2. Update FRONTEND_URL to your actual domain
# 3. Use strong database passwords
# 4. Consider using Docker secrets for sensitive data
# 5. Enable HTTPS and update CORS settings accordingly